// automatically generated by the FlatBuffers compiler, do not modify

package symbol

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// Location location of the symbol.
type Location struct {
	_tab flatbuffers.Table
}

func GetRootAsLocation(buf []byte, offset flatbuffers.UOffsetT) *Location {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &Location{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *Location) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Location) Table() flatbuffers.Table {
	return rcv._tab
}

/// FileName full filename of symbol position.
func (rcv *Location) FileName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// FileName full filename of symbol position.
/// Line line number of symbol location.
func (rcv *Location) Line() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

/// Line line number of symbol location.
func (rcv *Location) MutateLine(n uint32) bool {
	return rcv._tab.MutateUint32Slot(6, n)
}

/// Col column number of symbol location.
func (rcv *Location) Col() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

/// Col column number of symbol location.
func (rcv *Location) MutateCol(n uint32) bool {
	return rcv._tab.MutateUint32Slot(8, n)
}

/// Offset byte offset of symbol location.
func (rcv *Location) Offset() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

/// Offset byte offset of symbol location.
func (rcv *Location) MutateOffset(n uint32) bool {
	return rcv._tab.MutateUint32Slot(10, n)
}

/// USR Unified Symbol Resolution of cursor.
func (rcv *Location) USR() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// USR Unified Symbol Resolution of cursor.
func LocationStart(builder *flatbuffers.Builder) {
	builder.StartObject(5)
}
func LocationAddFileName(builder *flatbuffers.Builder, FileName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(FileName), 0)
}
func LocationAddLine(builder *flatbuffers.Builder, Line uint32) {
	builder.PrependUint32Slot(1, Line, 0)
}
func LocationAddCol(builder *flatbuffers.Builder, Col uint32) {
	builder.PrependUint32Slot(2, Col, 0)
}
func LocationAddOffset(builder *flatbuffers.Builder, Offset uint32) {
	builder.PrependUint32Slot(3, Offset, 0)
}
func LocationAddUSR(builder *flatbuffers.Builder, USR flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(USR), 0)
}
func LocationEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
