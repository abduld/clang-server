// automatically generated by the FlatBuffers compiler, do not modify

package symbol

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// Caller location of caller function.
type Caller struct {
	_tab flatbuffers.Table
}

func GetRootAsCaller(buf []byte, offset flatbuffers.UOffsetT) *Caller {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &Caller{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *Caller) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Caller) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *Caller) Location(obj *Location) *Location {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(Location)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *Caller) FuncCall() byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetByte(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *Caller) MutateFuncCall(n byte) bool {
	return rcv._tab.MutateByteSlot(6, n)
}

func CallerStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func CallerAddLocation(builder *flatbuffers.Builder, Location flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(Location), 0)
}
func CallerAddFuncCall(builder *flatbuffers.Builder, FuncCall byte) {
	builder.PrependByteSlot(1, FuncCall, 0)
}
func CallerEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
